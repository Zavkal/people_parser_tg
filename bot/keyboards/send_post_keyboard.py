from aiogram.types import InlineKeyboardButton, InlineKeyboardMarkup
from aiogram.utils.keyboard import InlineKeyboardBuilder

from database.db import get_all_publ_time, get_button_states


def send_post_kb(media_id: str):
    send_post_kb_ = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–π—á–∞—Å", callback_data=f"send_post_now:{media_id}")],
            [InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–µ–≥–æ–¥–Ω—è", callback_data=f"send_post_today:{media_id}")],
            [InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–≤—Ç—Ä–∞", callback_data=f"send_post_tomorrow:{media_id}")],
            [InlineKeyboardButton(text="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ –≤—Ä–µ–º–µ–Ω–∏", callback_data=f"send_post_by_time:{media_id}")],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data="start_working")],
        ]
    )
    return send_post_kb_


def send_post_base_kb(media_id: str):
    builder = InlineKeyboardBuilder()
    button_states = get_button_states(media_id)
    if button_states:
        button_tg_state, button_vk_state = button_states

        # –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –¥–ª—è Telegram –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ (on), –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å "‚úÖ"
        if button_tg_state == "on":
            builder.row(InlineKeyboardButton(text="‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ üíé –¢–ì", callback_data="tg_state"))
        else:
            builder.row(InlineKeyboardButton(text="‚òëÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ üíé –¢–ì", callback_data=f"send_to_tg:{media_id}"))

        # –ï—Å–ª–∏ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –í–ö –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ (on), –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∫–Ω–æ–ø–∫—É —Å "‚úÖ"
        if button_vk_state == "on":
            builder.row(InlineKeyboardButton(text="‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ ‚û°Ô∏è –í–ö", callback_data="vk_state"))
        else:
            builder.row(InlineKeyboardButton(text="‚òëÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ ‚û°Ô∏è –í–ö", callback_data=f"send_to_vk:{media_id}"))

    else:
        builder.row(InlineKeyboardButton(text="‚òëÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ üíé –¢–ì", callback_data=f"send_to_tg:{media_id}"))
        builder.row(InlineKeyboardButton(text="‚òëÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ ‚û°Ô∏è –í–ö", callback_data=f"send_to_vk:{media_id}"))

    builder.row(InlineKeyboardButton(text="‚è™ –ù–∞–∑–∞–¥", callback_data=f"send_post:{media_id}"))
    return builder.as_markup()


def send_post_tomorrow_kb(media_id: str):
    send_post_tomorrow_kb_ = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–£–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è", callback_data=f"choose_time:{media_id}")],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"send_post:{media_id}")],
        ]
    )
    return send_post_tomorrow_kb_


def send_post_today_kb(media_id: str):
    send_post_today_kb_ = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–£–∫–∞–∑–∞—Ç—å –≤—Ä–µ–º—è", callback_data=f"choose_time:{media_id}")],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"send_post:{media_id}")],
        ]
    )
    return send_post_today_kb_


def send_post_by_time_kb(media_id: str):
    send_post_by_time_kb_ = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–£–∫–∞–∑–∞—Ç—å –¥–∞—Ç—É –∏ –≤—Ä–µ–º—è", callback_data=f"choose_date_and_time:{media_id}")],
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"send_post:{media_id}")],
        ]
    )
    return send_post_by_time_kb_


def kb_back_send_post(media_id: str):
    kb_back_send_post_ = InlineKeyboardMarkup(
        inline_keyboard=[
            [InlineKeyboardButton(text="–ù–∞–∑–∞–¥", callback_data=f"send_post:{media_id}")],
        ]
    )
    return kb_back_send_post_

